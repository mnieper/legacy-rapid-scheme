* Stress test with ck.scm (does not work yet)

* When the macro expander copies code verbatim, set the context

* _ is auxiliary syntax in macros; have to define it at some level
  (a macro transformer would need to introduce new vars)

* Simplify macro transformer compiler output. Don't need to pass vectors as signature of function
  will be known. Can use let instead of function.

* with-syntactic-environment, with-scope is currently a bit awkward

* unclose-syntax => strip-syntactic-closures?

* optimize make-syntactic-closure by not closing unnecessary things
  - see: http://mumble.net/~campbell/t/t-synclo/synclo.t

* Rename imports can import bindings that are not bound

* Flag libraries (and contexts) as internal. Do not show them in stack traces.

* Write a syntax-rules library for use in the eval environment

* TODO: Before we do the rapid lib, we have to implement redefinitions in the top-level

* Should the expander output only tagged vectors as objects?

* Add some utilities to syntax.sld to handle improper lists

* Write integration tests

* Implement %define-syntax and syntax-rules

* syntax-rules is special syntax in (scheme base). It is not being checked in %define-syntax.

* Handle reader errors in read-file (and read-library-...?)

* Check whether imported identifiers are being overwritten

* Correct various uses of test-equal (the expected value has to come first)

* Rename record types into the <...> format

* Refactor syntax objects to (rapid compiler syntax). Check test for read.

* Rename (rapid table) to (rapid tables), and (rapid box) to (rapid boxes)

* See whether #|... (eof) makes any problems in reader (should raise an error)

* Check: https://drmeister.wordpress.com/2015/05/16/tagged-pointers-and-immediate-fixnums-characters-and-single-floats-in-clasp/ for nanboxing (search Cowan); cons cells could be extra